{"ast":null,"code":"var _jsxFileName = \"/Users/josesilva/Documents/Projetos/sitepiorfilme/src/components/Dashboard/winner/YearsWithMultipleWinnersSection.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { getYearsWithMultipleWinners } from \"../../../services/api\";\nimport \"./YearsWithMultipleWinnersSection.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst YearsWithMultipleWinnersSection = () => {\n  _s();\n  const [yearsWithMultipleWinners, setYearsWithMultipleWinners] = useState([]);\n  useEffect(() => {\n    const fetchYearsWithMultipleWinners = async () => {\n      try {\n        const data = await getYearsWithMultipleWinners();\n        setYearsWithMultipleWinners(data.years);\n      } catch (error) {\n        console.error(\"Error fetching years with multiple winners:\", error);\n      }\n    };\n    fetchYearsWithMultipleWinners();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"years-with-multiple-winners-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Years with Multiple Winners\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-container\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"years-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          className: \"table-header\",\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"wins-count-cell\",\n              children: \"Year\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"wins-count-cell\",\n              children: \"Winner Count\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          className: \"table-content\",\n          children: yearsWithMultipleWinners.map((yearData, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"wins-count-cell\",\n              children: yearData.year\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"wins-count-cell\",\n              children: yearData.winnerCount\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(YearsWithMultipleWinnersSection, \"efT3aa09GvafzKl9qhFN6eZxz6s=\");\n_c = YearsWithMultipleWinnersSection;\nexport default YearsWithMultipleWinnersSection;\nvar _c;\n$RefreshReg$(_c, \"YearsWithMultipleWinnersSection\");","map":{"version":3,"names":["React","useState","useEffect","getYearsWithMultipleWinners","jsxDEV","_jsxDEV","YearsWithMultipleWinnersSection","_s","yearsWithMultipleWinners","setYearsWithMultipleWinners","fetchYearsWithMultipleWinners","data","years","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","yearData","index","year","winnerCount","_c","$RefreshReg$"],"sources":["/Users/josesilva/Documents/Projetos/sitepiorfilme/src/components/Dashboard/winner/YearsWithMultipleWinnersSection.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { getYearsWithMultipleWinners } from \"../../../services/api\";\nimport \"./YearsWithMultipleWinnersSection.css\";\n\nconst YearsWithMultipleWinnersSection: React.FC = () => {\n  const [yearsWithMultipleWinners, setYearsWithMultipleWinners] = useState<\n    { year: number; winnerCount: number }[]\n  >([]);\n\n  useEffect(() => {\n    const fetchYearsWithMultipleWinners = async () => {\n      try {\n        const data = await getYearsWithMultipleWinners();\n        setYearsWithMultipleWinners(data.years);\n      } catch (error) {\n        console.error(\"Error fetching years with multiple winners:\", error);\n      }\n    };\n\n    fetchYearsWithMultipleWinners();\n  }, []);\n\n  return (\n    <div className=\"years-with-multiple-winners-container\">\n      <h2>Years with Multiple Winners</h2>\n      <div className=\"table-container\">\n        <table className=\"years-table\">\n          <thead className=\"table-header\">\n            <tr>\n              <th className=\"wins-count-cell\">Year</th>\n              <th className=\"wins-count-cell\">Winner Count</th>\n            </tr>\n          </thead>\n          <tbody className=\"table-content\">\n            {yearsWithMultipleWinners.map((yearData, index) => (\n              <tr key={index}>\n                <td className=\"wins-count-cell\">{yearData.year}</td>\n                <td className=\"wins-count-cell\">{yearData.winnerCount}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n};\n\nexport default YearsWithMultipleWinnersSection;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}