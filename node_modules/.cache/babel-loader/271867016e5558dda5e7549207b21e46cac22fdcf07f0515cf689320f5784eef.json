{"ast":null,"code":"import axios from \"axios\";\nconst API_URL = \"https://tools.texoit.com/backend-java/api/movies\";\n\n// export const getWinnersByYear = async () => {\n//   try {\n//     const response = await axios.get(`${API_URL}/winnersByYear`);\n//     return response.data;\n//   } catch (error) {\n//     console.error(\"Error fetching winners by year:\", error);\n//     return [];\n//   }\n// };\n\nexport const getTopStudios = async () => {\n  try {\n    const response = await axios.get(`${API_URL}?projection=studios-with-win-count`);\n    const studios = response.data.studios;\n\n    // Retorna apenas os 3 primeiros estúdios\n    return studios.slice(0, 3);\n  } catch (error) {\n    console.error(\"Error fetching top studios:\", error);\n    return [];\n  }\n};\n\n// export const getProducerIntervals = async () => {\n//   try {\n//     const response = await axios.get(`${API_URL}/producerIntervals`);\n//     return response.data;\n//   } catch (error) {\n//     console.error(\"Error fetching producer intervals:\", error);\n//     return [];\n//   }\n// };\n\n// export const getMovies = async () => {\n//   try {\n//     const response = await axios.get(`${API_URL}/movies`);\n//     return response.data;\n//   } catch (error) {\n//     console.error(\"Error fetching movies:\", error);\n//     return [];\n//   }\n// };","map":{"version":3,"names":["axios","API_URL","getTopStudios","response","get","studios","data","slice","error","console"],"sources":["/Users/josesilva/Documents/Projetos/sitepiorfilme/src/services/api.ts"],"sourcesContent":["import axios from \"axios\";\n\nconst API_URL = \"https://tools.texoit.com/backend-java/api/movies\";\n\n// export const getWinnersByYear = async () => {\n//   try {\n//     const response = await axios.get(`${API_URL}/winnersByYear`);\n//     return response.data;\n//   } catch (error) {\n//     console.error(\"Error fetching winners by year:\", error);\n//     return [];\n//   }\n// };\n\nexport const getTopStudios = async () => {\n  try {\n    const response = await axios.get(\n      `${API_URL}?projection=studios-with-win-count`\n    );\n    const studios = response.data.studios;\n\n    // Retorna apenas os 3 primeiros estúdios\n    return studios.slice(0, 3);\n  } catch (error) {\n    console.error(\"Error fetching top studios:\", error);\n    return [];\n  }\n};\n\n// export const getProducerIntervals = async () => {\n//   try {\n//     const response = await axios.get(`${API_URL}/producerIntervals`);\n//     return response.data;\n//   } catch (error) {\n//     console.error(\"Error fetching producer intervals:\", error);\n//     return [];\n//   }\n// };\n\n// export const getMovies = async () => {\n//   try {\n//     const response = await axios.get(`${API_URL}/movies`);\n//     return response.data;\n//   } catch (error) {\n//     console.error(\"Error fetching movies:\", error);\n//     return [];\n//   }\n// };\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,kDAAkD;;AAElE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,aAAa,GAAG,MAAAA,CAAA,KAAY;EACvC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAC7B,GAAEH,OAAQ,oCACb,CAAC;IACD,MAAMI,OAAO,GAAGF,QAAQ,CAACG,IAAI,CAACD,OAAO;;IAErC;IACA,OAAOA,OAAO,CAACE,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;EAC5B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;IACnD,OAAO,EAAE;EACX;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}